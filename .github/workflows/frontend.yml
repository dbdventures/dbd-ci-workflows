name: Frontend Workflow

on:
  workflow_call:
    inputs:
      SERVICE_NAME:
        type: string
      SERVICE_VERSION:
        type: string
    secrets:
      DBD_ARTIFACTORY_USER:
        required: true
      DBD_ARTIFACTORY_PASSWORD:
        required: true
      DBD_ARTIFACTORY_ADDRESS:
        required: true
      SONAR_TOKEN:
        required: true
jobs:

  build:
    name: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: xom9ikk/split@v1
        id: service
        with:
          string: ${{ inputs.SERVICE_NAME }}
          separator: /
          limit: -1
      - uses: ASzc/change-string-case-action@v2
        id: tag
        with:
          string: ${{ inputs.SERVICE_VERSION }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      # - name: Login to Artifactory
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ${{ secrets.DBD_ARTIFACTORY_ADDRESS }}
      #     username: ${{ secrets.DBD_ARTIFACTORY_USER }}
      #     password: ${{ secrets.DBD_ARTIFACTORY_PASSWORD }}
      - name: Build and push artifact
        env:
          IMAGE_NAME: ${{ steps.service.outputs._1 }}
          IMAGE_TAG: ${{ steps.tag.outputs.lowercase }}      
          DBD_ARTIFACTORY_USER: ${{ secrets.DBD_ARTIFACTORY_USER }}
          DBD_ARTIFACTORY_PASSWORD: ${{ secrets.DBD_ARTIFACTORY_PASSWORD }}
          DBD_ARTIFACTORY_ADDRESS: ${{ secrets.DBD_ARTIFACTORY_ADDRESS }}
          SERVICE_NAME: ${{ inputs.SERVICE_NAME }}
        run: echo ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        # uses: docker/build-push-action@v3
        # with:
        #   context: .
        #   tags: ${{ secrets.DBD_ARTIFACTORY_ADDRESS }}/${{ inputs.SERVICE_NAME }}:${{ env.IMAGE_TAG }}
        #   push: false
