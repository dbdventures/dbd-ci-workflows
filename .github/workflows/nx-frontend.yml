name: Frontend Workflow

on:
  workflow_call:
    inputs:
      SERVICE_NAME:
        type: string
      SERVICE_VERSION:
        type: string
      GITHUB_ORG:
        type: string
        required: true
      REMOTE_REPOSITORY:
        type: string
        required: true
      REMOTE_BRANCH:
        type: string
        default: "main"
      HELM_REPOSITORY_NAME:
        type: string
        required: true
      HELM_REPOSITORY_URL:
        type: string
        required: true
      HELM_CHART:
        type: string
        required: true
      HELM_VALUES:
        type: string
        required: true
      HELM_NAMESPACE:
        type: string
        required: true
      HELM_ROLLOUT_TIMEOUT:
        default: "500s"
        type: string
    secrets:
      HELM_REPOSITORY_USERNAME:
        required: true
      HELM_REPOSITORY_PASSWORD:
        required: true
      ACTIONS_SSH_KEY:
        required: true

jobs:
  build:
    name: set-output
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get commit version
        id: commit
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    outputs:
      commit: ${{ steps.commit.outputs.sha_short }}
  deploy:
    if: contains(github.ref,'main')
    name: deploy
    runs-on: demo-runner
    needs: [ "build"]

    steps:

      - uses: actions/checkout@v2
        with:
          repository: '${{ inputs.GITHUB_ORG }}/${{ inputs.REMOTE_REPOSITORY }}'
          path: ${{ inputs.REMOTE_REPOSITORY }}
          ref: ${{ inputs.REMOTE_BRANCH }}
          ssh-key: '${{ secrets.ACTIONS_SSH_KEY }}'

      - name: Install prerequisites
        run: |
          curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.25.0/bin/linux/amd64/kubectl && chmod +x ./kubectl && sudo mv ./kubectl /usr/local/bin/
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 && chmod 700 get_helm.sh && ./get_helm.sh
          kubectl version --client
          helm version

      - name: 'Helm Registry Login'
        run: |
          helm repo add ${{ inputs.HELM_REPOSITORY_NAME }} ${{ inputs.HELM_REPOSITORY_URL }} --username ${{ secrets.HELM_REPOSITORY_USERNAME }} --password ${{ secrets.HELM_REPOSITORY_PASSWORD }}
          helm repo update

      - name: 'Helm Release'
        env:
          GITHUB_SHA: ${{ needs.build.outputs.commit }}
        run: |
          helm -n ${{ inputs.HELM_NAMESPACE }} upgrade --install ${{ github.event.repository.name }} -f ${{ inputs.REMOTE_REPOSITORY }}/${{ inputs.HELM_VALUES }} --set-string podLabels.git-sha=${GITHUB_SHA} --wait "--timeout=${{ inputs.HELM_ROLLOUT_TIMEOUT }}" ${{ inputs.HELM_CHART }}
